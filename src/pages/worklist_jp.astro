---
import Layout from '../layouts/Layout_jp.astro';

// 記事一覧ページのスクリプト部分

// microCMSからデータを取得するための環境変数からAPIキーなどを取得する
const API_URL = import.meta.env.MICROCMS_API_URL;
const API_KEY = import.meta.env.MICROCMS_API_KEY;

// APIエンドポイントのURL
const url = `${API_URL}/api/v1/blogs`;

// microCMSからブログ記事の一覧を取得する関数
async function getBlogs() {
  try {
    const response = await fetch(url, {
      headers: {
        'X-MICROCMS-API-KEY': API_KEY, // APIキーをヘッダーに含める
      },
    });

    if (!response.ok) {
      throw new Error(`APIリクエストが失敗した: ${response.statusText}`);
    }

    const data = await response.json();
    return data.contents; // 'contents'の中に記事の配列が入っている
  } catch (error) {
    console.error("ブログ記事の取得エラー:", error);
    return []; // エラー時は空の配列を返す
  }
}

// 記事データを取得
const blogs = await getBlogs();
---

<Layout>

<style>
  .aspect-square {
    aspect-ratio: 1 / 1;
  }
</style>

<div class="container mx-auto px-4 mt-8">
  <div class="flex flex-col md:flex-row md:items-center">
    <div class="hidden md:block md:w-1/6"></div>

    <div class="w-full md:w-2/3">

      <p class="text-base font-bold m-5 text-center">Work list</p>

      <div class="grid grid-cols-1 sm:grid-cols-3 gap-4">

      {blogs.length > 0 ? (
        blogs.map((blog) => (

            <div class="aspect-square relative overflow-hidden group">
              <a href={`/blog/${blog.id}`}>
                <img src={blog.eyecatch.url} class="w-full h-full object-cover transition duration-300 ease-in-out group-hover:opacity-80">
              </a>
            </div>

      ))

      ) : (
          <p>記事が見つかりません。microCMSの設定を確認しろ。</p>
      )}

      </div>

    </div>

    <div class="hidden md:block md:w-1/6"></div>
  </div>
</div>
</Layout>